@startuml
participant App
participant CloudSynchroniser
participant Sync_Service

note over CloudSynchroniser #aqua
    Assume the client already joined a session, performed wallclock synchronsation, registered
    its timelines at the sync service and asked the sync service for available timelines in this
    sync session and context. Also the App is listening for state-change events on the CloudSynchroniser
    object. For details on this setup process refer to client_setup.seqdiag.

    Now the client subscribes for timeline updates of a particiular timeline and consumes updates
    of that timeline by tying a clock to that timeline
end note

App --> CloudSynchroniser: enableTimelineSync(...)

CloudSynchroniser --> Sync_Service: send(TimelineSubscriptionREQ)
note left
    // Example
    // (Send to request topic: 'Sessions/<sessionId>/REQ')
    
    TimelineSubscriptionREQ = {
        contextId: "dcs8d7c6hs8d6ch", 
        deviceId: "6cecd7d7-3b54-41bd-aecb-f25f52d03e22",
        id: "MTUyMDM1MjA5NDUzMC00",
        responseChannel: "Sessions/3487r6348r76g/6cecd7d7-3b54-41bd-aecb-f25f52d03e22/RESP",
        sessionId: "3487r6348r76g",
        timelineId: "urn:dcs8d7c6hs8d6ch:2f1b1ccb-d266-4a59-af0c-f5a9c111e514:dmlkZW8ubXA0",
        type: "TimelineSubscriptionREQ",
        version: "0.0.1"
    }
end note

Sync_Service --> CloudSynchroniser: send(TimelineUpdate)
note left
    // Example
    // Send to responseChannel defined in TimelineSubscriptionREQ

    TimelineUpdate = {
        contentId: "video.mp4",
        deviceId: "2f1b1ccb-d266-4a59-af0c-f5a9c111e514",
        id: null,
        presentationTimestamp: {
            earliest: {contentTime: 6928, wallclockTime: 1520352096258.5, speed: 1},
            actual: {contentTime: 6928, wallclockTime: 1520352096258.5, speed: 1},
            latest: {contentTime: 6928, wallclockTime: 1520352096258.5, speed: 1}
        },
        sessionId: "3487r6348r76g",
        timelineId: "urn:dcs8d7c6hs8d6ch:2f1b1ccb-d266-4a59-af0c-f5a9c111e514:dmlkZW8ubXA0",
        timelineType: "tag:rd.bbc.co.uk,2015-12-08:dvb:css:timeline:simple-elapsed-time:1000",
        type: "TimelineUpdate",
        version: "0.0.1"
    }
end note

CloudSynchroniser --> App: Event("TimelineAvailable")

App --> CloudSynchroniser: syncClockToThisTimeline(clock, timelineId, correlation)

note over CloudSynchroniser #aqua
    The CloudSynchroniser sets the timeline clock (refered to by 'timelineId') to be a parent clock
    the 'clock'. Whenever changes on the timeline clock are propargated to the 'clock'. The 'clock'
    can be used to drive a video presentation in sync with the video presentation that is driven 
    by the timeline clock on the remote master client.
end note

@enduml